---
# tasks file for tom8.install
- name: create the group 
  group:
    name: tomcat
    state: present

- name: create the user
  user:
    name: tomcat
    shell: /bin/bash
    group: tomcat
    comment: tomuser
    home: /opt/tomcat
    state: present
- name: create the directory
  file:
    path: /opt/tomcat
    state: directory
    mode: 0777
    recurse: true

- name: Download file and force basic auth
  get_url:
    url: http://apache.mirrors.ionfish.org/tomcat/tomcat-8/v8.0.51/bin/apache-tomcat-8.0.51.tar.gz
    dest: /home/ansible/apache-tomcat-8.0.51.tar.gz
    force_basic_auth: yes

- name:  unarchive
  unarchive:
    src: /home/ansible/apache-tomcat-8.0.51.tar.gz
    dest: /opt/tomcat
    #creates: /opt/tomcat/apache-tomcat-8.0.51/LICENSE

- name:  make the tomcat user the owner of the work, temp, and logs directories
  file:
    path: /opt/tomcat/apache-tomcat-8.0.51/{{ item }}
    state: directory
    owner: tomcat
    group: tomcat
    recurse: true
  with_items:
    - work
    - temp
    - logs
    - webapps

- name: the tomcat user write access to the conf directory, and read access to the files
  file:
    path: /opt/tomcat/apache-tomcat-8.0.51
    state: directory
    owner: tomcat
    group: tomcat 
    recurse: true

- name: the tomcat user write access to the conf directory, and read access to the files
  file:
    path: /opt/tomcat/apache-tomcat-8.0.51/conf
    state: directory
    mode: "g=rwx"
    recurse: true

- name: create the tomcat.service RedHat
  template: 
    src: tamplates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  notify: tomcatrestart
  when: ansible_os_family == "RedHat"

- name: create the tomcat.conf  Debian
  template:
    src: tamplates/tomcat.conf.j2
    dest: /etc/init/tomcat.conf
  notify: tomcatrestart
  when: ansible_os_family == "Debian"

- name: create the tomcat-user-xml  
  template:
    src: tamplates/tomcat-users.xml.j2
    dest: /opt/tomcat/apache-tomcat-8.0.51/conf/tomcat-users.xml
  notify: tomcatrestart
 
 

